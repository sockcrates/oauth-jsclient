/**
 * Declaration file generated by dts-gen and improved manually.
 */

export = OAuthClient;

declare class OAuthClient {
  constructor(config: OAuthClientConfig);

  authHeader(): any;

  authorizeUri(params: AuthorizeURIConfig): string;

  createError(e: any, authResponse: any): any;

  createToken(uri: any): any;

  getKeyFromJWKsURI(id_token: any, kid: any, request: any): any;

  getPublicKey(modulus: any, exponent: any): any;

  getToken(): any;

  getTokenRequest(request: any): any;

  getUserInfo(): any;

  isAccessTokenValid(): any;

  loadResponse(request: any): any;

  loadResponseFromJWKsURI(request: any): any;

  log(level: any, message: any, messageData: any): void;

  makeApiCall(params: any): any;

  refresh(): any;

  refreshUsingToken(refresh_token: any): any;

  revoke(params: any): any;

  setAuthorizeURLs(params: any): any;

  setToken(params: any): any;

  validateIdToken(params: any): any;

  validateToken(): void;

  static authorizeEndpoint: string;

  static cacheId: string;

  static environment: {
    production: string;
    sandbox: string;
  };

  static jwks_uri: string;

  static migrate_production: string;

  static migrate_sandbox: string;

  static revokeEndpoint: string;

  static scopes: {
    Accounting: string;
    Address: string;
    Benefits: string;
    Email: string;
    Intuit_name: string;
    OpenId: string;
    Payment: string;
    Payroll: string;
    Phone: string;
    Profile: string;
    TimeTracking: string;
  };

  static tokenEndpoint: string;

  static user_agent: string;

  static userinfo_endpoint_production: string;

  static userinfo_endpoint_sandbox: string;

}

declare interface OAuthClientConfig {
  appKey?: string;
  appSecret?: string;
  clientId: string;
  clientSecret: string;
  environment: 'production' | 'sandbox';
  logging?: boolean;
  redirectUri: string;
}

declare interface AuthorizeURIConfig {
  scope: Array<string>;
  state: string;
}
